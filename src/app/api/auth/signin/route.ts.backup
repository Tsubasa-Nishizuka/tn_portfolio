import { NextRequest, NextResponse } from 'next/server';
import { UserService } from '@/lib/database';
import { generateToken } from '@/lib/auth';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { email, password } = body;

    // 入力検証
    if (!email || !password) {
      return NextResponse.json(
        { message: 'メールアドレスとパスワードが必要です' },
        { status: 400 }
      );
    }

    const userService = new UserService();

    // ユーザー検索
    const user = userService.findByEmail(email);
    if (!user) {
      return NextResponse.json(
        { message: 'メールアドレスまたはパスワードが間違っています' },
        { status: 401 }
      );
    }

    // パスワード検証
    const isValidPassword = userService.verifyPassword(password, user.password);
    if (!isValidPassword) {
      return NextResponse.json(
        { message: 'メールアドレスまたはパスワードが間違っています' },
        { status: 401 }
      );
    }

    // JWTトークン生成
    const token = generateToken({
      userId: user.id,
      email: user.email,
      role: user.role,
      name: user.name
    });

    // レスポンス作成（パスワードは除外）
    const { password: _, ...userWithoutPassword } = user;

    const response = NextResponse.json({
      message: 'ログインしました',
      user: userWithoutPassword,
      role: user.role,
      token
    });

    // Cookieにトークンをセット
    response.cookies.set('auth-token', token, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 7 // 7日間
    });

    return response;

  } catch (error) {
    console.error('Signin error:', error);
    return NextResponse.json(
      { message: 'サーバーエラーが発生しました' },
      { status: 500 }
    );
  }
}
