import { NextRequest, NextResponse } from 'next/server';
import { verifyToken } from '@/lib/auth';
import { UserService } from '@/lib/database';

export async function GET(request: NextRequest) {
  try {
    // Cookieまたはヘッダーからトークンを取得
    const token = request.cookies.get('auth-token')?.value || 
                  request.headers.get('authorization')?.replace('Bearer ', '');

    if (!token) {
      return NextResponse.json(
        { message: '認証トークンがありません' },
        { status: 401 }
      );
    }

    // JWTトークンを検証
    const payload = verifyToken(token);
    if (!payload) {
      return NextResponse.json(
        { message: '無効なトークンです' },
        { status: 401 }
      );
    }

    // データベースでユーザーの存在を確認
    const userService = new UserService();
    const user = userService.findByEmail(payload.email);
    
    if (!user) {
      return NextResponse.json(
        { message: 'ユーザーが見つかりません' },
        { status: 401 }
      );
    }

    // ユーザー情報を返す（パスワードは除外）
    const { password: _, ...userWithoutPassword } = user;

    return NextResponse.json({
      user: userWithoutPassword,
      message: '認証成功'
    });

  } catch (error) {
    console.error('Token verification error:', error);
    return NextResponse.json(
      { message: 'サーバーエラーが発生しました' },
      { status: 500 }
    );
  }
}
